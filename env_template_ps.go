package main

var (
	envTemplatePS string
)

func init() {
	envTemplatePS = `
########################################
#
# This file is generated by goautoenv
#
# Please do not change this file.
#

$script:ENV_DIR = "{{.Env.Root}}"

$global:GOPATH_OLD = $env:GOPATH
$env:GOPATH = "$($script:ENV_DIR)/.goenv"

$global:_GOAUTOENV_OLD_PATH = $env:PATH
$env:PATH = "$($env:GOPATH)/bin;$($env:PATH)"

$global:GOPACKAGE = "{{.Env.Package}}"

$global:_GOAUTOENV_WORKSPACE = "$($env:GOPATH)/src/$GOPACKAGE"

function global:_OLD_GOAUTOENV_PROMPT { "" }
$function:_OLD_GOAUTOENV_PROMPT = $function:prompt
function global:prompt {
  write-host "($global:GOPACKAGE)"
  & $function:_OLD_GOAUTOENV_PROMPT
}

{{range $e := .Aliases}}
$global:_GOAUTOENV_{{$e}}=Get-Command {{$e}} | Select-Object -ExpandProperty path

function global:{{$e}} () {
  pushd $global:_GOAUTOENV_WORKSPACE
  Invoke-Expression "$global:_GOAUTOENV_{{$e}} $Args"
  popd
}
{{end}}

function global:deactivate () {
  $env:GOPATH = $global:GOPATH_OLD
  $global:GOPACKAGE = $global:GOPACKAGE_OLD
  $env:PATH = $global:_GOAUTOENV_OLD_PATH
  $function:prompt = $function:_OLD_GOAUTOENV_PROMPT

  remove-item function:deactivate
  {{range $e := .Aliases}}
  remove-item function:{{$e}}
  remove-variable _GOAUTOENV_{{$e}}
  {{end}}
}
`
}
